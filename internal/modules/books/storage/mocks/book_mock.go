// Code generated by MockGen. DO NOT EDIT.
// Source: books_interface.go

// Package mock_storage is a generated GoMock package.
package mock_storage

import (
	reflect "reflect"

	models "github.com/Paul1k96/bookstorage/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockBookStorager is a mock of BookStorager interface.
type MockBookStorager struct {
	ctrl     *gomock.Controller
	recorder *MockBookStoragerMockRecorder
}

// MockBookStoragerMockRecorder is the mock recorder for MockBookStorager.
type MockBookStoragerMockRecorder struct {
	mock *MockBookStorager
}

// NewMockBookStorager creates a new mock instance.
func NewMockBookStorager(ctrl *gomock.Controller) *MockBookStorager {
	mock := &MockBookStorager{ctrl: ctrl}
	mock.recorder = &MockBookStoragerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBookStorager) EXPECT() *MockBookStoragerMockRecorder {
	return m.recorder
}

// GetAuthorsByBook mocks base method.
func (m *MockBookStorager) GetAuthorsByBook(book string) ([]models.Author, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAuthorsByBook", book)
	ret0, _ := ret[0].([]models.Author)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAuthorsByBook indicates an expected call of GetAuthorsByBook.
func (mr *MockBookStoragerMockRecorder) GetAuthorsByBook(book interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAuthorsByBook", reflect.TypeOf((*MockBookStorager)(nil).GetAuthorsByBook), book)
}

// GetBooksByAuthor mocks base method.
func (m *MockBookStorager) GetBooksByAuthor(author string) ([]models.Book, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBooksByAuthor", author)
	ret0, _ := ret[0].([]models.Book)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBooksByAuthor indicates an expected call of GetBooksByAuthor.
func (mr *MockBookStoragerMockRecorder) GetBooksByAuthor(author interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBooksByAuthor", reflect.TypeOf((*MockBookStorager)(nil).GetBooksByAuthor), author)
}
